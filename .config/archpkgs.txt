####################################################
# List of packages with their (general) use
####################################################

- zsh
	Alternative shell. Make default with: $ chsh -s /usr/bin/zsh
	Config location: ~/.zshrc
	After editing config, reload with: $ source .zshrc
	Opt Deps:
		zsh-autosuggestions
		zsh-syntax-highlighting
		zsh-completions
		zsh-vi-mode (aur)
	
- starship
	Custom prompt.
	Config location: ~/.config/starship.toml

- powerline (-vim)
	Nice status line for vim (or prompt for bash).
	Config location: ~/.config/powerline

- rofi
	Menu system/run launcher for X11. Can also be used as a powermenu and window switcher.
	Config location: ~/.config/rofi

- wofi
	Like rofi, but for wayland.

- nm-applet
	System try applet for NetworkManager.
	(should just work)

- pacman-contrib
	Contains paccache command, which is used to clean pacman's package cache. 

- ranger
	TUI file manager. 
	Config location: ~/.config/ranger/rc.conf
	Opt Deps: 
		atool: for previews of archives
		ffmpegthumbnailer: for video previews
		highlight: for syntax highlighting of code
		mediainfo: for viewing information about media files
		odt2txt: for OpenDocument texts
		poppler: for pdf previews
		ueberzug: for previews of images
		w3m: for previews of images and html pages	

- lf 
	TUI file manager.
	Config location: ~/.config/lf.conf

- ly (aur) 
	Minimal display manager. Reads from /usr/share/xsessions for X11 sessions and 
	/usr/share/wayland-sessions for Wayland sessions. 

- lightdm
	Lightweight display manager. The greeter (login manager) can take different forms:
		- lightdm-gtk-greeter (minimal)
		- lightdm-slick-greeter (linux mint default)
	These can be configured with lightdm-gtk-greeter-settings and lightdm-settings (aur)
	respectively. To set the greeter used, edit /etc/lightdm/lightdm.conf and put in the
	following (for example): 
	[Seat:*]
	greeter-session=lightdm-slick-greeter

- redshift (for wayland wlroots use: gammastep) 
	Control colour temperature of the screen. Can be handled automatically based on 
	location, set in the config file or manually.
	Config location: ~/.config/redshift/redshift.conf
	Autostarted with redshift &.
	For single use, $ redshift -O <temp> -P
	redshift-gtk gives systray icon.

- texlive(-bin, -core, -latexextra, etc.)
	LaTeX stuff. Check wiki for descriptions.
	texlive-most contains the useful packages (for me), so install this and then choose
	from the presented list.

- otf-latin-modern 
	Contains latex-like fonts (Latin Modern family). 
	For math fonts, also install otf-latinmodern-math.

- easyeffects
	Additional sound effects for pipewire (analagous to pulseffects for pulseaudio).
	Possibly fixes low sound output.

- xfce4-notifyd
	Notification server (use with libnotify).
	Launch manually (autostart) with /usr/lib/xfce4/notifyd/xfce-notifyd & (check wiki)
	Custom theme location: .themes/<theme_name>/xfce-notify-4.0/gtk.css
	Edit theme, other options with /bin/xfce-notifyd-config

- xfce4-power-manager
	Power management settings (gui).
	
- libinput-gestures (aur)
	Multi-touch touchpad gestures on X11 using libinput. Use with xdotool, package to 
	replicates keypresses.
	Must add user to input group for this to work (see github page), tldr: 
		$ sudo gpasswd -a $USER input
	Config location: ~/.config/libinput-gestures.conf
	Add to startup script: libinput-gestures-setup desktop start

- slock
	Screen locking tool for X11. 
	To configure, with tips and tricks, see wiki. 

- polkit, polkit-gnome, gnome-keyring
	Authentication agent (polkit-gnome is required by cinnamon, so just use it). 
	Autostart with: /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
	polkit-gnome allows graphical programs to ask for authentication before performing actions.
	gnome-keyring stores and accesses keys and secrets (notbaly needed for vscode sign-in).
	Opt extras: 
		- seahorse: GUI for managing keys in gnome-keyring

- lxappearance-gtk3
	Graphical display options for X11 (lxde). Nice for changing themes, cursors etc. 

- lxrandr-gtk3
	Graphical monitor configuration tool (lxde).

- acpilight
	Management of backlight brightness etc. (replacement for xbacklight which doesn't work 
	on my laptop).
	Privileges are needed to change brightness in this way, so for this to work correctly 
	a custom udev rule needs to be made, and the user needs to be in the video group. 
	See the acpilight gitlab for instructions.

- kvantum 
	Theme engine for qt apps. 
	Set QT_THEME_OVERRIDE=kvantum in /etc/environment for this to work for all qt apps. 
	To install new themes, download (from KDE store - materia is a good one) and direct 
	kvantum to the downloaded folder. 

- xarchiver 
	Manages archives. Can be used with graphical file managers. 

- ntfs-3g
	NTFS file system driver (needed to mount NTFS volumes, like ext. hard drive)

- android-file-transfer
	For accessing files on android phones, using Media Transfer Protocol (MTP). 
	Create a mount point (~/mnt), and then use: $ aft-mtp-mount ~/mnt
	Access files in this directory, and when finished unmount with 
	$ fusermount -u ~/mnt

- ecryptfs-utils
	Set of scripts for managing an encrypted fs-stack using the ecryptfs kernel module.
	See below note (and archwiki) on encryption for details. 
	Basic usage after setup:
		$ ecryptfs-mount-private 
	to mount the private upper-directory (~/Private) by default, and
		$ ecryptfs-umount-private
	to unmount.

- jre-openjdk
	Java Runtime Environment. This is needed for extensions in LibreOffice (Zotero). It pulls in the java-runtime-common and java-environment-common dependencies, but these are not enough for GUI applications. Note that there are several different environemnts that can be installed, and then managed with archlinux-java, but this one should be sufficient for most things. 

- linux-wifi-hotspot (aur)
	For creating a software access point (ethernet -> wifi ap). 
	After install, create a hotspot with: # create_ap wlan0 enp1s0 <SSID> <PASSWD>

####################################################
# General Notes
####################################################

 -> Pacman can be configured with /etc/pacman.conf, of interest might be the ParallelDownloads, Color and ILoveCandy options.  

 -> Every now and again, run paccache command to clean cache, as it can grow quite large as packages are installed.

 -> If using an SSD, TRIM can be enabled by enabling the fstrim.timer systemd unit (# systemctl enable fstrim.timer) - note that the utils-linux package is required. This schedules fstrim to run once per week. TRIM erases data blocks in the SSD that are no longer in use, which can improve the longevity of the drive. 

 -> The systemd journal can sometimes take long to flush on boots, especially if it gets large. Its total size can be limited with the --vacuum flags, and applied to active journals at the same time with --rotate.

 -> To blacklist kernel modules (useful for ex. with a broken internal wifi card, or bluetooth modules that are never used), create a /etc/modprobe.d/blacklist.conf file with 
	blacklist <module_name>
lines for each module. Will work after a reboot. 

 -> An aur helper like yay is useful for managing aur packages. Install yay manually using the instructions on the wiki, and then use the option --save --sudoloop for it to ask for the password before doing the download.  

 -> On the Acer laptop, even when SecureBoot is disabled it requires the efi bootloader file to be in the list of trusted bootloaders. If it isn't, grub fails to load. When installing, activate SB -> manually add EFI/grub/grub.efi to trusted list -> deactivate SB again. After this grub should be visible again. 

-> To work with encrypted files, the ecryptfs module can be used. This is in the kernel by default, but needs to be loaded the first time by # modprobe ecryptfs. There are different ways it can be used, the simplest is to use a set of scripts provided by the ecryptfs-utils package. To set this up with the default configuration (the Ubuntu way in the wiki), use 
	$ ecryptfs-setup-private --nopwcheck --noautomount
This creates the directory ~/Private, which will (when mounted) contain the sensitive unencrypted data. The lower directory ~/.Private will contain the encrypted data when the upper directory is not mounted. When setting up with the above command, a passphrase is needed. Keep this safe!! It will be needed for the data to be decrypted each time the upper directory is mounted. 
